<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>jhmarryme&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wangdaye7.github.io/"/>
  <updated>2019-03-03T11:47:42.047Z</updated>
  <id>https://wangdaye7.github.io/</id>
  
  <author>
    <name>Jiahao Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mybatis入门</title>
    <link href="https://wangdaye7.github.io/2019/03/04/mybatis%E5%85%A5%E9%97%A8/"/>
    <id>https://wangdaye7.github.io/2019/03/04/mybatis入门/</id>
    <published>2019-03-03T19:46:54.000Z</published>
    <updated>2019-03-03T11:47:42.047Z</updated>
    
    <content type="html"><![CDATA[<h1 id="day1"><a href="#day1" class="headerlink" title="day1"></a>day1</h1><h2 id="mybatis的理解"><a href="#mybatis的理解" class="headerlink" title="mybatis的理解"></a>mybatis的理解</h2><h2 id="使用mybatis的步骤"><a href="#使用mybatis的步骤" class="headerlink" title="使用mybatis的步骤"></a>使用mybatis的步骤</h2><p>主要按照这个步骤来做, 在其中具体配置文件的编写中, 参考<a href="http://www.mybatis.org/mybatis-3/zh/getting-started.html" target="_blank" rel="noopener">mybatis中文网</a>的内容填写, 注意其中的一些细节, 顺利完成. 在配置SqlMapConfig.xml中的properties属性时, 使用resource标签外部引用.properties文件.<br>第一步：创建 maven 工程<br>第二步：导入坐标<br>第三步：编写必要代码（实体类和持久层接口）<br>第四步：编写 SqlMapConfig.xml<br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;? xml version = <span class="string">"1.0"</span> encoding = <span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt; !DOCTYPE configuration</span><br><span class="line">PUBLIC <span class="string">"-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span> &gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;properties resource=<span class="string">"jdbcConfig.properties"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;typeAliases&gt;</span><br><span class="line">&lt;!--&lt;typeAlias <span class="built_in">type</span>=<span class="string">"jhmarryme.domain.User"</span> <span class="built_in">alias</span>=<span class="string">"user"</span> /&gt;--&gt;</span><br><span class="line">&lt;package name=<span class="string">"jhmarryme.domain"</span> /&gt;</span><br><span class="line">&lt;/typeAliases&gt;</span><br><span class="line">&lt;environments default=<span class="string">"mysql"</span>&gt;</span><br><span class="line">&lt;environment id=<span class="string">"mysql"</span>&gt;</span><br><span class="line">&lt;transactionManager <span class="built_in">type</span>=<span class="string">"JDBC"</span> /&gt;</span><br><span class="line">&lt;dataSource <span class="built_in">type</span>=<span class="string">"POOLED"</span>&gt;</span><br><span class="line">&lt;property name=<span class="string">"driver"</span> value=<span class="string">"<span class="variable">$&#123;driver&#125;</span>"</span> /&gt;</span><br><span class="line">&lt;property name=<span class="string">"url"</span> value=<span class="string">"<span class="variable">$&#123;url&#125;</span>"</span> /&gt;</span><br><span class="line">&lt;property name=<span class="string">"username"</span> value=<span class="string">"<span class="variable">$&#123;username&#125;</span>"</span> /&gt;</span><br><span class="line">&lt;property name=<span class="string">"password"</span> value=<span class="string">"<span class="variable">$&#123;password&#125;</span>"</span> /&gt;</span><br><span class="line">&lt;/dataSource&gt;</span><br><span class="line">&lt;/environment&gt;</span><br><span class="line">&lt;/environments&gt;</span><br><span class="line">&lt;mappers&gt;</span><br><span class="line">&lt;package name=<span class="string">"jhmarryme.dao"</span> /&gt;</span><br><span class="line">&lt;!--&lt;mapper resource=<span class="string">"jhmarryme/dao/IUserDao.xml"</span> /&gt;--&gt;</span><br><span class="line">&lt;/mappers&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></p><p>第五步：编写映射配置文件<br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;mapper namespace=<span class="string">"jhmarryme.dao.IUserDao"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 查找所有用户信息--&gt;</span><br><span class="line">&lt;select id=<span class="string">"findAllUser"</span> resultType=<span class="string">"jhmarryme.domain.User"</span>&gt;</span><br><span class="line">select * from user</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;!--查询总用户数--&gt;</span><br><span class="line">&lt;select id=<span class="string">"findTotalUser"</span> resultType=<span class="string">"int"</span>&gt;</span><br><span class="line">select count(id) from user</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;!--保存一个用户, 并返回表中自增的id--&gt;</span><br><span class="line">&lt;insert id=<span class="string">"saveUser"</span> parameterType=<span class="string">"jhmarryme.domain.User"</span>&gt;</span><br><span class="line">&lt;selectKey keyProperty=<span class="string">"id"</span> keyColumn=<span class="string">"id"</span> resultType=<span class="string">"int"</span>&gt;</span><br><span class="line">select last_insert_id();</span><br><span class="line">&lt;/selectKey&gt;</span><br><span class="line">insert into user(username, address, birthday, sex)</span><br><span class="line">values(<span class="comment">#&#123;username&#125;, #&#123;address&#125;, #&#123;birthday&#125;, #&#123;sex&#125;)</span></span><br><span class="line">&lt;/insert&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 根据条件查询相关的用户 --&gt;</span><br><span class="line">&lt;select id=<span class="string">"findUserByCondition"</span> resultType=<span class="string">"user"</span> parameterType=<span class="string">"user"</span>&gt;</span><br><span class="line">select * from user</span><br><span class="line">&lt;<span class="built_in">where</span>&gt;</span><br><span class="line">&lt;<span class="keyword">if</span> <span class="built_in">test</span>=<span class="string">"username != null"</span>&gt;</span><br><span class="line">and username like <span class="comment">#&#123;username&#125;</span></span><br><span class="line">&lt;/<span class="keyword">if</span>&gt;</span><br><span class="line">&lt;<span class="keyword">if</span> <span class="built_in">test</span>=<span class="string">"address != null"</span>&gt;</span><br><span class="line">and address like <span class="comment">#&#123;address&#125;</span></span><br><span class="line">&lt;/<span class="keyword">if</span>&gt;</span><br><span class="line">&lt;/<span class="built_in">where</span>&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--查询id在集合中的用户--&gt;</span><br><span class="line">&lt;select id=<span class="string">"findUserInIds"</span> parameterType=<span class="string">"pojovo"</span> resultType=<span class="string">"user"</span>&gt;</span><br><span class="line">select * from user</span><br><span class="line">&lt;<span class="built_in">where</span>&gt;</span><br><span class="line">&lt;<span class="keyword">if</span> <span class="built_in">test</span>=<span class="string">"ids != null and ids.size() &gt;0"</span>&gt;</span><br><span class="line">&lt;foreach collection=<span class="string">"ids"</span> open=<span class="string">"and id in("</span> close=<span class="string">")"</span> item=<span class="string">"id"</span> separator=<span class="string">","</span>&gt;</span><br><span class="line"><span class="comment">#&#123;id&#125;</span></span><br><span class="line">&lt;/foreach&gt;</span><br><span class="line">&lt;/<span class="keyword">if</span>&gt;</span><br><span class="line">&lt;/<span class="built_in">where</span>&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure></p><p>第六步：编写测试类</p><h2 id="Mybatis基本用法记录"><a href="#Mybatis基本用法记录" class="headerlink" title="Mybatis基本用法记录"></a>Mybatis基本用法记录</h2><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><ol><li>导入坐标时没有mybatis的提示, 第一反应肯定是仓库里找不到这个包, 打开设置, 找到maven的设置, 发现maven使用的是默认的版本, 于是乎更换之前下载的版本, 其中配置好了本地仓库的位置. 问题解决</li></ol><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><ol><li><p>SqlMapConfig.xml 中配置的内容和顺序</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-properties（属性）</span><br><span class="line">    --property</span><br><span class="line">-settings（全局配置参数）</span><br><span class="line">    --setting</span><br><span class="line">-typeAliases（类型别名）</span><br><span class="line">    --typeAliase</span><br><span class="line">    --package</span><br><span class="line">-typeHandlers（类型处理器）</span><br><span class="line">-objectFactory（对象工厂）</span><br><span class="line">-plugins（插件）</span><br><span class="line">-environments（环境集合属性对象）</span><br><span class="line">    --environment（环境子属性对象）</span><br><span class="line">        ---transactionManager（事务管理）</span><br><span class="line">        ---dataSource（数据源）</span><br><span class="line">-mappers（映射器）</span><br><span class="line">    --mapper</span><br><span class="line">    --package</span><br></pre></td></tr></table></figure></li><li><p>jdbcConfig.properties<br>如下:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql://localhost:3306/ee42</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=1234</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;day1&quot;&gt;&lt;a href=&quot;#day1&quot; class=&quot;headerlink&quot; title=&quot;day1&quot;&gt;&lt;/a&gt;day1&lt;/h1&gt;&lt;h2 id=&quot;mybatis的理解&quot;&gt;&lt;a href=&quot;#mybatis的理解&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="javaWeb" scheme="https://wangdaye7.github.io/categories/javaWeb/"/>
    
    
      <category term="javaWeb" scheme="https://wangdaye7.github.io/tags/javaWeb/"/>
    
      <category term="mybatis" scheme="https://wangdaye7.github.io/tags/mybatis/"/>
    
      <category term="web框架" scheme="https://wangdaye7.github.io/tags/web%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>hexo使用记录</title>
    <link href="https://wangdaye7.github.io/2019/02/27/hexo%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>https://wangdaye7.github.io/2019/02/27/hexo使用记录/</id>
    <published>2019-02-26T23:43:53.000Z</published>
    <updated>2019-02-26T15:55:04.721Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加分类及标签"><a href="#添加分类及标签" class="headerlink" title="添加分类及标签"></a>添加分类及标签</h2><h3 id="创建“分类”选项"><a href="#创建“分类”选项" class="headerlink" title="创建“分类”选项"></a>创建“分类”选项</h3><ol><li><p><strong>生成“分类”页并添加tpye属性</strong><br> 打开命令行，进入博客所在文件夹。执行命令</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p> 根据提示信息找到index.md, 添加type: “categories”到内容中，添加后是这样的：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2017-05-27 13:47:40</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"categories"</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p> 保存并关闭文件。</p></li><li><p><strong>给文章添加“categories”属性</strong><br>打开需要添加分类的文章，为其添加categories属性。下方的categories: web前端表示添加这篇文章到“web前端”这个分类。注意：hexo一篇文章只能属于一个分类，也就是说如果在“- web前端”下方添加“-xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- web前端”下的 “-xxx ”分类）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo使用记录</span><br><span class="line">date: 2019-02-26 23:43:53</span><br><span class="line">categories:</span><br><span class="line">- hexo</span><br><span class="line">tags:</span><br><span class="line">- hexo</span><br><span class="line">- 博客</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ol><h3 id="创建“标签”选项"><a href="#创建“标签”选项" class="headerlink" title="创建“标签”选项"></a>创建“标签”选项</h3><p>同上, 只需要把categories替换为tags即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;添加分类及标签&quot;&gt;&lt;a href=&quot;#添加分类及标签&quot; class=&quot;headerlink&quot; title=&quot;添加分类及标签&quot;&gt;&lt;/a&gt;添加分类及标签&lt;/h2&gt;&lt;h3 id=&quot;创建“分类”选项&quot;&gt;&lt;a href=&quot;#创建“分类”选项&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="hexo" scheme="https://wangdaye7.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://wangdaye7.github.io/tags/hexo/"/>
    
      <category term="博客" scheme="https://wangdaye7.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>vue入门学习</title>
    <link href="https://wangdaye7.github.io/2019/02/26/vue%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
    <id>https://wangdaye7.github.io/2019/02/26/vue入门学习/</id>
    <published>2019-02-26T12:24:13.000Z</published>
    <updated>2019-02-26T15:14:47.558Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习的路线"><a href="#学习的路线" class="headerlink" title="学习的路线"></a>学习的路线</h2><ol><li>Vue概述</li><li>Vue的快速入门</li><li>Vue的语法<ul><li>插值表达式</li><li>事件的绑定</li><li>数据的显示</li><li>逻辑判断和循环输出</li></ul></li><li>Vue的生命周期<ul><li>8个生命周期的执行点<ul><li>4个基本的</li><li>4个特殊的</li></ul></li></ul></li><li>axios的ajax异步请求<ul><li>它和jquery的ajax比较相似</li></ul></li><li>综合案例<ul><li>实现用户的查询列表和更新操作<ul><li>前端：Vue</li><li>后端：ssm</li></ul></li></ul></li></ol><h3 id="helloWord的创建"><a href="#helloWord的创建" class="headerlink" title="helloWord的创建"></a>helloWord的创建</h3><ol><li>选择maven-&gt;webapp模板, 补全java, resources, test文件夹</li><li>run -&gt; edit configuration-&gt;添加tomcat local</li><li><p>script代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">//view model</span><br><span class="line"></span><br><span class="line">//创建一个vue对象</span><br><span class="line">new Vue(&#123;</span><br><span class="line">el:<span class="string">"#app"</span>, //接管id为app的区域</span><br><span class="line">data:&#123;</span><br><span class="line">    message:<span class="string">"Hello world, Vue"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>html代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">&#123;&#123;message&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>补充tomcat的设置, 使代码更新后无需重新部署即可同步更新到浏览器</p><ul><li>run -&gt; edit configuration-&gt;Tomcat 下的deployment 选择后缀为explode的 项目war</li><li>在server进行更新设置</li></ul></li></ol><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><h4 id="keyDown事件的用法"><a href="#keyDown事件的用法" class="headerlink" title="keyDown事件的用法"></a>keyDown事件的用法</h4><p>使用event.keyCode获取按下的键, 对按下的键进行控制, event.preventDefault()阻止事件, .stopPopagation()阻止传播</p><h4 id="vue接收event需要加上-并且可使用-代替v-on"><a href="#vue接收event需要加上-并且可使用-代替v-on" class="headerlink" title="vue接收event需要加上$, 并且可使用@代替v:on"></a>vue接收<strong>event</strong>需要加上<strong>$</strong>, 并且可使用<strong>@</strong>代替v:on</h4><h4 id="按键修饰符的使用"><a href="#按键修饰符的使用" class="headerlink" title="按键修饰符的使用"></a>按键修饰符的使用</h4><p>@keyDown.enter=”fun1” 当回车被按下的时候执行fun1函数</p><h4 id="使用v-bind给标签的属性赋值"><a href="#使用v-bind给标签的属性赋值" class="headerlink" title="使用v-bind给标签的属性赋值"></a>使用v-bind给标签的属性赋值</h4><ul><li>可用:简化书写</li><li>:color=”ys1”, 在Vue对象中定义ys1的值</li><li>直接使用插值表达式不会生效</li></ul><h4 id="v-on的事件修饰符"><a href="#v-on的事件修饰符" class="headerlink" title="v-on的事件修饰符"></a>v-on的事件修饰符</h4><p>常用的两个:</p><ul><li>.stop</li><li>.prevent<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">    &lt;form @submit.prevent action=<span class="string">"http://www.itcast.cn"</span> method=<span class="string">"get"</span>&gt;</span><br><span class="line">        &lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> value=<span class="string">"提交"</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;div @click=<span class="string">"fun1"</span>&gt;</span><br><span class="line">        &lt;a @click.stop href=<span class="string">"http://www.itcast.cn"</span>&gt;itcast&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: <span class="string">'#app'</span>, //表示当前vue对象接管了div区域</span><br><span class="line">        methods: &#123;</span><br><span class="line">            fun1: <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">                alert(<span class="string">"hello itcast"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="v-text和v-html"><a href="#v-text和v-html" class="headerlink" title="v-text和v-html"></a>v-text和v-html</h4><p>在标签内使用v-text=”message”, message在Vue对象中赋值</p><h4 id="v-for的使用"><a href="#v-for的使用" class="headerlink" title="v-for的使用"></a>v-for的使用</h4><ol><li><p>列表中的使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;li v-for=<span class="string">"(item, index) in list"</span>&gt; //索引在后</span><br><span class="line">    &#123;&#123;index + <span class="string">"  "</span> + item&#125;&#125;</span><br><span class="line">&lt;/li&gt;</span><br></pre></td></tr></table></figure></li><li><p>对象中的使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;li v-for=<span class="string">"(value, key) in wjh"</span>&gt;</span><br><span class="line">    &#123;&#123;key + <span class="string">"  "</span> + value&#125;&#125;</span><br><span class="line">&lt;/li&gt;</span><br></pre></td></tr></table></figure></li><li><p>对象数组中的使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr v-for=<span class="string">"p in person"</span>&gt;</span><br><span class="line">        &lt;td&gt;&#123;&#123;p.name&#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&#123;&#123;p.age&#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&#123;&#123;p.sex&#125;&#125;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure></li></ol><h4 id="v-model的使用"><a href="#v-model的使用" class="headerlink" title="v-model的使用"></a>v-model的使用</h4><p>用于控制表单input中的value<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">    姓名:&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> id=<span class="string">"username"</span> v-model=<span class="string">"user.username"</span>&gt;&lt;br&gt;</span><br><span class="line">    密码:&lt;input <span class="built_in">type</span>=<span class="string">"password"</span> id=<span class="string">"password"</span> v-model=<span class="string">"user.password"</span>&gt;&lt;br&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"button"</span> @click=<span class="string">"fun"</span> value=<span class="string">"获取"</span>&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">el:<span class="string">'#app'</span>, //表示当前vue对象接管了div区域</span><br><span class="line">data:&#123;</span><br><span class="line">user:&#123;username:<span class="string">""</span>,password:<span class="string">""</span>&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line">fun:<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">alert(this.user.username+<span class="string">" "</span>+this.user.password);</span><br><span class="line">this.user.username=<span class="string">"tom"</span>;</span><br><span class="line">this.user.password=<span class="string">"11111111"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h4 id="v-if与v-show"><a href="#v-if与v-show" class="headerlink" title="v-if与v-show"></a>v-if与v-show</h4><p>v-if=”true/false” 控制元素是否显示, 可以使用vue对象的data控制</p><h4 id="声明周期"><a href="#声明周期" class="headerlink" title="声明周期"></a>声明周期</h4><p>vue对象初始化过程中，会执行到beforeCreate,created,beforeMount,mounted 这几个钩子的内容</p><ul><li>beforeCreate ：数据还没有监听，没有绑定到vue对象实例，同时也没有挂载对象</li><li>created ：数据已经绑定到了对象实例，但是还没有挂载对象</li><li>beforeMount: 模板已经编译好了，根据数据和模板已经生成了对应的元素对象，将数据对象关联到了对象的<br>el属性，el属性是一个HTMLElement对象，也就是这个阶段，vue实例通过原生的createElement等方法来创<br>建这个html片段，准备注入到我们vue实例指明的el属性所对应的挂载点</li><li>mounted:将el的内容挂载到了el，相当于我们在jquery执行了(el).html(el),生成页面上真正的dom，上面我们<br>就会发现dom的元素和我们el的元素是一致的。在此之后，我们能够用方法来获取到el元素下的dom对象，并<br>进 行各种操作</li><li><p>当我们的data发生改变时，会调用beforeUpdate和updated方法</p><ul><li><p>beforeUpdate ：数据更新到dom之前，我们可以看到$el对象已经修改，但是我们页面上dom的数据还<br>没有发生改变</p></li><li><p>updated: dom结构会通过虚拟dom的原则，找到需要更新页面dom结构的最小路径，将改变更新到<br>dom上面，完成更新</p></li></ul></li><li>beforeDestroy,destroed :实例的销毁，vue实例还是存在的，只是解绑了事件的监听还有watcher对象数据<br>与view的绑定，即数据驱动</li></ul><h4 id="ajax的应用"><a href="#ajax的应用" class="headerlink" title="ajax的应用"></a>ajax的应用</h4><ul><li><p>引入axios<br>Axios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中<br>axios的github:<a href="https://github.com/axios/axios" target="_blank" rel="noopener">https://github.com/axios/axios</a></p><ul><li><p>get</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">//通过给定的ID来发送请求</span><br><span class="line">axios.get(<span class="string">'/user?ID=12345'</span>)</span><br><span class="line">.<span class="keyword">then</span>(<span class="keyword">function</span>(response)&#123;</span><br><span class="line">console.log(response);</span><br><span class="line">&#125;)</span><br><span class="line">.catch(<span class="keyword">function</span>(err)&#123;</span><br><span class="line">console.log(err);</span><br><span class="line">&#125;);</span><br><span class="line">//以上请求也可以通过这种方式来发送</span><br><span class="line">axios.get(<span class="string">'/user'</span>,&#123;</span><br><span class="line">params:&#123;</span><br><span class="line">ID:12345</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">.<span class="keyword">then</span>(<span class="keyword">function</span>(response)&#123; //回调函数</span><br><span class="line">console.log(response);</span><br><span class="line">&#125;)</span><br><span class="line">.catch(<span class="keyword">function</span>(err)&#123; //捕获异常</span><br><span class="line">console.log(err);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>post</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">axios.post(<span class="string">'/user'</span>,&#123;</span><br><span class="line">firstName:<span class="string">'Fred'</span>,</span><br><span class="line">lastName:<span class="string">'Flintstone'</span></span><br><span class="line">&#125;)</span><br><span class="line">.<span class="keyword">then</span>(<span class="keyword">function</span>(res)&#123;</span><br><span class="line">console.log(res);</span><br><span class="line">&#125;)</span><br><span class="line">.catch(<span class="keyword">function</span>(err)&#123;</span><br><span class="line">console.log(err);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习的路线&quot;&gt;&lt;a href=&quot;#学习的路线&quot; class=&quot;headerlink&quot; title=&quot;学习的路线&quot;&gt;&lt;/a&gt;学习的路线&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Vue概述&lt;/li&gt;
&lt;li&gt;Vue的快速入门&lt;/li&gt;
&lt;li&gt;Vue的语法&lt;ul&gt;
&lt;li&gt;插值表达
      
    
    </summary>
    
      <category term="javaWeb" scheme="https://wangdaye7.github.io/categories/javaWeb/"/>
    
    
      <category term="javaWeb" scheme="https://wangdaye7.github.io/tags/javaWeb/"/>
    
      <category term="vue" scheme="https://wangdaye7.github.io/tags/vue/"/>
    
      <category term="前端" scheme="https://wangdaye7.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>旅游网项目记录</title>
    <link href="https://wangdaye7.github.io/2019/02/25/%E6%97%85%E6%B8%B8%E7%BD%91%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/"/>
    <id>https://wangdaye7.github.io/2019/02/25/旅游网项目记录/</id>
    <published>2019-02-24T23:26:40.000Z</published>
    <updated>2019-02-27T06:16:11.905Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基于黑马java的一个初始项目完成-只完成后台功能-复习之前学习的一些内容-巩固知识"><a href="#基于黑马java的一个初始项目完成-只完成后台功能-复习之前学习的一些内容-巩固知识" class="headerlink" title="基于黑马java的一个初始项目完成, 只完成后台功能, 复习之前学习的一些内容, 巩固知识"></a>基于黑马java的一个初始项目完成, 只完成后台功能, 复习之前学习的一些内容, 巩固知识</h2><h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><ol><li>Web层<ul><li>Servlet：前端控制器</li><li>html：视图</li><li>Filter：过滤器</li><li>BeanUtils：数据封装</li><li>Jackson：json序列化工具</li></ul></li><li>Service层<ul><li>Javamail：java发送邮件工具</li><li>Redis：nosql内存数据库</li><li>Jedis：java的redis客户端</li></ul></li><li>Dao层<ul><li>Mysql：数据库</li><li>Druid：数据库连接池</li><li>JdbcTemplate：jdbc的工具</li></ul></li></ol><h2 id="项目准备阶段"><a href="#项目准备阶段" class="headerlink" title="项目准备阶段"></a>项目准备阶段</h2><ol><li>项目导入<ul><li>项目存在于<a href>项目地址</a> 补充:待上传</li><li>使用idea右侧的maven projects入口中的+, 选中项目根文件夹下的pom.xml, 完成导入</li></ul></li><li>项目启动</li><li>创建数据库相关, 根据提供的SQL文件完成</li></ol><h2 id="相应功能实现"><a href="#相应功能实现" class="headerlink" title="相应功能实现"></a>相应功能实现</h2><h3 id="注册功能"><a href="#注册功能" class="headerlink" title="注册功能"></a>注册功能</h3><ul><li>页面效果<img src="./旅游网项目记录/注册表单.png" alt="页面效果"></li><li>功能分析</li><li><p>代码实现</p><ul><li><p>前台代码实现</p><ul><li>表单校验</li><li>异步ajax提交表单<br>在这里我采用首先设置jQuery对象插件的方式实现check功能, 对输入框的校验功能和设置样式通过调用check完成<br>部分代码如下:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">$.fn.extend(&#123;</span><br><span class="line">//判断正则表达式是否匹配</span><br><span class="line">//当不匹配时, 将输入框边框置红</span><br><span class="line">check: <span class="keyword">function</span> (reg) &#123;</span><br><span class="line">var flag = reg.test($(this).val());</span><br><span class="line">//当正则匹配时, 恢复边框</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line">$(this).css(<span class="string">"border"</span>, <span class="string">""</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;//置红</span><br><span class="line">$(this).css(<span class="string">"border"</span>, <span class="string">"1px solid red"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">checkForm</span></span>() &#123;</span><br><span class="line">//校验表单</span><br><span class="line"><span class="built_in">return</span> (checkUsername() &amp;&amp; checkPassword() &amp;&amp; checkEmail());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">checkUsername</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> $(<span class="string">"#username"</span>).check(/^\w&#123;8,20&#125;$/);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">checkPassword</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> $(<span class="string">"#password"</span>).check(/^\w&#123;8,20&#125;$/);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">checkEmail</span></span>() &#123;</span><br><span class="line"><span class="built_in">return</span> $(<span class="string">"#email"</span>).check(/^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]&#123;2,4&#125;)$/);</span><br><span class="line">&#125;</span><br><span class="line">//入口函数</span><br><span class="line">$(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">设置各个输入框的失去焦点的校验事件</span><br><span class="line">*/</span><br><span class="line">$(<span class="string">"#username"</span>).blur(checkUsername);</span><br><span class="line">$(<span class="string">"#password"</span>).blur(checkPassword);</span><br><span class="line">$(<span class="string">"#email"</span>).blur(checkEmail);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//定义表单的提交</span><br><span class="line">$(<span class="string">"#registerForm"</span>).submit(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">//如果表单校验通过, 则使用ajax方式提交表单数据</span><br><span class="line"><span class="keyword">if</span> (checkForm()) &#123;</span><br><span class="line">$.post(<span class="string">"servlet/registerUserServlet"</span>, $(<span class="string">"#registerForm"</span>).serialize(), <span class="keyword">function</span> (data) &#123;</span><br><span class="line">//处理返回的数据</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//不使用常规方式提交</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>后台代码实现</p><ul><li><p>编写registUserServlet<br>部分代码如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">校验验证码    **待完成</span><br><span class="line">*/</span><br><span class="line">//封装表单数据</span><br><span class="line">User user = new User();</span><br><span class="line">try &#123;</span><br><span class="line">BeanUtils.populate(user, request.getParameterMap());</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">//判断用户是否可注册</span><br><span class="line">UserService userService = new UserServiceImpl();</span><br><span class="line">Boolean flag = userService.regist(user);</span><br><span class="line">//创建结果集</span><br><span class="line">ResultInfo info = new ResultInfo();</span><br><span class="line">//如果flag=<span class="literal">true</span>, 注册成功</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line">info.setFlag(<span class="literal">true</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">info.setFlag(<span class="literal">false</span>);</span><br><span class="line">info.setErrorMsg(<span class="string">"注册失败, 用户名已存在"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">* 错误信息存放在ResultInfo对象中, 将此对象转换为json, 使用输出流输出</span><br><span class="line">*/</span><br><span class="line">ObjectMapper mapper = new ObjectMapper();</span><br><span class="line">String str_info = mapper.writeValueAsString(info);</span><br><span class="line">response.getWriter().write(str_info);</span><br></pre></td></tr></table></figure></li><li><p>service<br>部分代码如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">* 完成注册功能</span><br><span class="line">* @param user</span><br><span class="line">* @<span class="built_in">return</span></span><br><span class="line">*/</span><br><span class="line">@Override</span><br><span class="line">public Boolean regist(User user) &#123;</span><br><span class="line">User u_find = userDao.findUserByUsername(user);</span><br><span class="line"><span class="keyword">if</span> (u_find != null) &#123;</span><br><span class="line">//用户名不可用, 注册失败</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">/**</span><br><span class="line">* 在完成注册最后一步之前, 设置用户的激活状态, 验证码, 完成发送邮件功能</span><br><span class="line">*/</span><br><span class="line">user.setStatus(<span class="string">"N"</span>);</span><br><span class="line"></span><br><span class="line">String code = UuidUtil.getUuid();</span><br><span class="line">user.setCode(code);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">String email = <span class="string">"&lt;a href='http://localhost/travel/activeUserServlet?code="</span> + user.getCode() + <span class="string">"'&gt;点击激活&lt;/a&gt;"</span>;</span><br><span class="line">MailUtils.sendMail(user.getEmail(), email, <span class="string">"test"</span>);</span><br><span class="line">System.out.println(user.getEmail());</span><br><span class="line">//完成注册功能</span><br><span class="line">userDao.saveUser(user);</span><br><span class="line"></span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">//出现异常, 注册失败</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h3 id="邮箱验证"><a href="#邮箱验证" class="headerlink" title="邮箱验证"></a>邮箱验证</h3><p>当账号注册后往用户填写的邮箱中发送一封<strong>激活邮件</strong>, 只有当用户点击了激活邮件时, 才算是注册完成.<br>所以在Service层的注册功能中添加此功能, 通过设置user.status为’N’, 表示用户现在尚未激活, 此时生成一个激活码, 并将此激活码存入用户信息中, 在向用户发送邮件的时候使用此验证码作为激活的标准.</p><ul><li>发送邮件<br>  使用java的邮件工具类<em>MailUtils</em>, 调用其中sendMail方法可以完成邮件发送<ul><li>无法发送邮件 提示非法地址<br>  没有正确填写邮件地址</li><li>无法发送邮件 错误代码535<br>  需要在邮箱内开启授权码, 然后填写在配置中 </li><li>接受到的邮件乱码<br>  需要将发送邮件所在函数的文件格式改为UTF-8</li></ul><ul><li>用户点击邮件激活<br>  设置status的状态值为’Y’, 完成激活</li><li>修改userDao中的save方法, 加上status, code<br>部分代码如下:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public boolean active(String code) &#123;</span><br><span class="line">//判断code是否有效, 有效则接受一个user对象</span><br><span class="line">User user = userDao.findUserByCode(code);</span><br><span class="line"><span class="keyword">if</span> (user == null) &#123;</span><br><span class="line">//验证码无效, 激活失败</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">//设置用户的status为<span class="string">'Y'</span> 激活用户</span><br><span class="line">userDao.updateUserStatus(user);</span><br><span class="line"><span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="登陆功能"><a href="#登陆功能" class="headerlink" title="登陆功能"></a>登陆功能</h3><p>根据用户输入的账号密码进行登陆</p><ul><li>前台代码实现<ol><li>给登陆按钮绑定一个提交事件<ul><li>使用ajax进行提交</li><li>对响应的信息进行处理<ul><li>登陆成功, 跳转到首页</li><li>登陆失败, 显示提示信息</li></ul></li></ul></li></ol></li><li>后台代码实现<ul><li>servlet<ol><li>接收用户的账户和密码</li><li>调用service层进行登陆, 返回一个user<ul><li>登陆成功, 设置info, 并且将用户存入session.</li><li>登陆失败, 设置ResultInfo对象提示信息</li><li>尚未激活, 提示进行激活</li></ul></li><li>将ResultInfo用json方式响应</li></ol></li><li>service<ol><li>根据账号密码查询用户 findUserByUsernameAndPassword(user……)</li><li>返回查找的user对象</li></ol></li><li>dao<br>完成对应功能</li></ul></li></ul><p>部分代码如下:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">public class LoginServlet extends HttpServlet &#123;</span><br><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line">//      1. 接收用户的账户和密码</span><br><span class="line">User user = new User();</span><br><span class="line">try &#123;</span><br><span class="line">BeanUtils.populate(user, request.getParameterMap());</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">//        2. 调用service层进行登陆, 返回一个user</span><br><span class="line">UserService userService = new UserServiceImpl();</span><br><span class="line">user = userService.login(user);</span><br><span class="line"></span><br><span class="line">ResultInfo info = new ResultInfo();</span><br><span class="line"><span class="keyword">if</span> (user == null) &#123;</span><br><span class="line">//                * 登陆失败, 设置ResultInfo对象提示信息</span><br><span class="line">info.setFlag(<span class="literal">false</span>);</span><br><span class="line">info.setErrorMsg(<span class="string">"用户名或密码错误"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (user != null &amp;&amp; !<span class="string">"Y"</span>.equals(user.getStatus())) &#123;</span><br><span class="line">//                * 尚未激活, 提示进行激活</span><br><span class="line">info.setFlag(<span class="literal">false</span>);</span><br><span class="line">info.setErrorMsg(<span class="string">"尚未激活的账户"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (user != null &amp;&amp; <span class="string">"Y"</span>.equals(user.getStatus())) &#123;</span><br><span class="line">//  登陆成功, 设置info, 并且将用户存入session.</span><br><span class="line">info.setFlag(<span class="literal">true</span>);</span><br><span class="line">request.getSession().setAttribute(<span class="string">"user"</span>, user);</span><br><span class="line">&#125;</span><br><span class="line">//        3. 将ResultInfo用json方式响应</span><br><span class="line">response.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">ObjectMapper mapper = new ObjectMapper();</span><br><span class="line">mapper.writeValue(response.getOutputStream(), info);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">doPost(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*********************************************</span><br><span class="line">public User login(User user) &#123;</span><br><span class="line">    //        1. 根据账号密码查询用户 findUserByUsernameAndPassword(user......)</span><br><span class="line">    //        2. 返回查找的user对象</span><br><span class="line">    <span class="built_in">return</span> userDao.finUserByUsernameAndPassword(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="退出功能"><a href="#退出功能" class="headerlink" title="退出功能"></a>退出功能</h3><ol><li><p>前台<br> button绑定一个事件, 点击后跳转到exitServlet</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">"javascript:location.href='exitServlet';"</span>&gt;退出&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>servlet<br> 销毁session对象</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.getSession().invalidate();</span><br></pre></td></tr></table></figure><p> 重定向到登陆界面, 不使用转发</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.sendRedirect(request.getContextPath() + <span class="string">"/login.html"</span>);</span><br></pre></td></tr></table></figure></li></ol><h3 id="header中的姓名提示功能"><a href="#header中的姓名提示功能" class="headerlink" title="header中的姓名提示功能"></a>header中的姓名提示功能</h3><p>因为是HTML文件, 不能使用域对象, 在这里采取ajax的方式请求findUserServlet,然后在servlet中查找域对象, 用json响应回HTML.</p><ul><li><p>jQuery</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">//加载页面时发送ajax请求显示用户名</span><br><span class="line">$.get(<span class="string">"findUserServlet"</span>, &#123;&#125;,</span><br><span class="line"><span class="keyword">function</span> (data) &#123;</span><br><span class="line">//将用户名显示到界面上</span><br><span class="line">$(<span class="string">"#user_msg"</span>).text(<span class="string">"欢迎回来,"</span> + data.username);</span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>servlet</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//取出session中的user对象</span><br><span class="line">User user = (User) request.getSession().getAttribute(<span class="string">"user"</span>);</span><br><span class="line"></span><br><span class="line">ObjectMapper mapper = new ObjectMapper();</span><br><span class="line">//设置响应信息格式</span><br><span class="line">response.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">mapper.writeValue(response.getOutputStream(), user);</span><br></pre></td></tr></table></figure></li></ul><h2 id="犯的错误"><a href="#犯的错误" class="headerlink" title="犯的错误"></a>犯的错误</h2><pre><code>多次在dao层进行查询的时候只创建了user对象, 却没有使用此对象接收查询的结果</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;基于黑马java的一个初始项目完成-只完成后台功能-复习之前学习的一些内容-巩固知识&quot;&gt;&lt;a href=&quot;#基于黑马java的一个初始项目完成-只完成后台功能-复习之前学习的一些内容-巩固知识&quot; class=&quot;headerlink&quot; title=&quot;基于黑马java
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo入门</title>
    <link href="https://wangdaye7.github.io/2019/02/25/hexo%E5%85%A5%E9%97%A8/"/>
    <id>https://wangdaye7.github.io/2019/02/25/hexo入门/</id>
    <published>2019-02-24T21:23:30.000Z</published>
    <updated>2019-02-27T06:01:02.385Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h2><ul><li><a href="https://hexo.io/zh-cn/docs" target="_blank" rel="noopener">hexo中文网</a></li><li><a href="https://theme-next.iissnan.com" target="_blank" rel="noopener">next主题</a></li></ul><h2 id="遇到的一些问题"><a href="#遇到的一些问题" class="headerlink" title="遇到的一些问题"></a>遇到的一些问题</h2><h3 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h3><ol><li>设置主题后本地预览没有效果<ul><li>重新生成整个博客文档解决, 暂无找到其他方法</li></ul></li></ol><h3 id="编写文章"><a href="#编写文章" class="headerlink" title="编写文章"></a>编写文章</h3><ol><li>语法不熟悉<ul><li>在使用标记后必须空格, 随意缩进会导致没有格式, markdown有严格的缩进要求</li></ul></li></ol><h3 id="无法访问"><a href="#无法访问" class="headerlink" title="无法访问"></a>无法访问</h3><ul><li>github pages中 出现Domain does not resolve to the GitHub Pages server.<br>在群里大佬帮助下找到问题所在, 将域名解析删除, 留下一个CNAME, 只填写wangdaye7.github.io<br>, 检查hexo/source文件夹下的CNAME文件.完成后cmd中运行ipconfig /flushdns, 然后Chrome中Ctrl+Shift+R不使用缓存.问题解决</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址&quot;&gt;&lt;/a&gt;参考网址&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs&quot; target=&quot;_blank&quot; rel
      
    
    </summary>
    
      <category term="hexo" scheme="https://wangdaye7.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://wangdaye7.github.io/tags/hexo/"/>
    
      <category term="博客" scheme="https://wangdaye7.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://wangdaye7.github.io/2019/02/24/hello-world/"/>
    <id>https://wangdaye7.github.io/2019/02/24/hello-world/</id>
    <published>2019-02-24T11:46:40.697Z</published>
    <updated>2019-02-24T11:46:40.698Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
